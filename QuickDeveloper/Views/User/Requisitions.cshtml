@using System.IdentityModel.Tokens.Jwt;
@using Microsoft.IdentityModel.Tokens;
@using QuickDeveloper.Controllers;
@using System.Security.Claims;
@model IEnumerable<QuickDeveloper.Models.Model_Requisition>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor context
@{
    ViewData["Title"] = "Requisitions | QuickDeveloper";
    var token = context.HttpContext.Request.Cookies["token"];

    if (AuthenticateController.Instance.claimsPrincipal == null)
    {
        TokenValidationParameters validationParameters = AuthenticateController.Instance.ValidationParameters();
        var tokenHandler = new JwtSecurityTokenHandler();
        AuthenticateController.Instance.claimsPrincipal = tokenHandler.ValidateToken(token, validationParameters, out SecurityToken validatedToken);
    }

    var user = AuthenticateController.Instance.claimsPrincipal.FindFirst("id").Value;
    var role = AuthenticateController.Instance.claimsPrincipal.FindFirst(ClaimTypes.Role).Value.ToUpper();
    List<Model_Requisition> requisitions = Model_DB.Requisitions(user, role);
    int i = 0;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
<link rel="stylesheet" href="~/css/requisitions.css" asp-append-version="true" />

<section class="main-content">
    <h3><span style="color: #ED2218">Minhas </span><span style="color: #303457">Requisições</span></h3>

    <table class="table content-table">
        <thead>
            <tr class="bg-table">
                <th>
                    @Html.DisplayName("#")
                </th>
                <th>
                    @Html.DisplayName("Descrição")
                </th>
                <th>
                    @Html.DisplayName("Desenvolvedor")
                </th>
                <th>
                    @Html.DisplayName("Solicitante")
                </th>
            </tr>
        </thead>
        <tbody>
            @if (requisitions.Count > 0)
            {
                foreach (var item in requisitions)
                {
                    var dateInput = $"dateInput{i}";
                    var dateExp = $"dateExp{i}";
                    var emailInput = $"emailInput{i}";

                    i++;

                    <tr data-toggle="dropdown" class="dropdown-trigger">
                        <td>
                            @Html.DisplayFor(modelItem => i)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.developer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.requester)
                        </td>
                        <td style="display: none" id="@dateInput">
                            @Html.DisplayFor(modelItem => item.dateRequisition)
                        </td>
                        <td style="display: none" id="@dateExp">
                            @item.dateRequisitionExp
                        </td>
                        <td style="display: none" id="@emailInput">
                            @Html.DisplayFor(modelItem => item.email)
                        </td>
                    </tr>                 
                }                
            }
            else
            {
                <tr>
                    @if (role.Equals("REGULAR"))
                    {
                        <td colspan="4" style="text-align: center;">
                            Você ainda não tem nenhuma requisição, comece a usar agora mesmo nosso <a asp-area="" asp-controller="Chat" asp-action="ChatBot">ChatBot</a>!
                        </td>
                    }
                    else
                    {
                        <td colspan="4" class="dev-alert">
                            Você ainda não tem nenhuma requisição, aguarde algum solicitante se identificar com suas competências!
                        </td>
                    }
                </tr>
            }

        </tbody>
    </table>
</section>

<section class="modal hidden">
    <table class ="table content-table">
        <thead>
            <tr>
                <th colspan="2" class="title"></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    Data da Solicitação:
                </td>
                <td class="dateOutput"></td>
            </tr>
            <tr>
                <td>
                    Data de Expiração:
                </td>
                <td class="dateExpOut"></td>
            </tr>
            @if (role.Equals("REGULAR"))
            {
                <tr>
                    <td>
                        Competências do Dev:
                    </td>
                    <td class="competences"></td>
                </tr>
                <tr>
                    <td>
                        Informações do Dev:
                    </td>
                    <td class="infos"></td>
                </tr>
            }            
            <tr>
                <td>
                    Email para Contato:
                </td>
                <td class="emailOutput"></td>
            </tr>
        </tbody>        
    </table>
    
    <button class="btn">Fechar</button>
</section>

<div class="overlay hidden"></div>


@if (TempData["Error"] != null)
{
    <script>
        alert("@Html.Raw(TempData["Error"])");
        @{ TempData["Error"] = null; }
    </script>
}

<script src="/js/requisitions.js"></script>
